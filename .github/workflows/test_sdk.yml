---
# This workflow runs unit tests on pull requests and merges to master
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: SDK Unit Tests
on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: 1.8.3

      - name: Get poetry cache directory
        id: poetry-cache
        run: echo "dir=$(poetry config cache-dir)" >> $GITHUB_OUTPUT

      - name: Cache poetry dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-${{ matrix.python-version }}-

      - name: Install dependencies
        run: poetry install

      - name: Run Unit Tests
        run: |
          make test:unit:coverage

      - name: Upload coverage reports to Codecov
        if: matrix.python-version == '3.10'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-unit-tests
          fail_ci_if_error: false
